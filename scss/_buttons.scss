.btn {
  display: inline-flex;
  gap: var(--#{$cdk}size-4);
  align-items: center;
  justify-content: center;
  font-weight: 500;
  white-space: normal;
  border-width: var(--#{$cdk}size-1);

  &:not([href]) {
    &:hover {
      text-decoration: none;
    }
  }

  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    cursor: not-allowed;
    //background-color: $gray-disabled;
    opacity: 1;
  }

  > .material-icons {
    font-size: var(--#{$cdk}size-20);
  }

  &-default {
    @include ps-button-outline-variant(var(--#{$cdk}primary-500), var(--#{$cdk}primary-800), "secondary");
  }

  &-link {
    > .material-icons {
      // css trick to remove icon underline on hover
      float: left;
    }

    @include disabled() {
      color: var(--#{$cdk}primary-500);
      background-color: var(--#{$cdk}white);
      border-color: var(--#{$cdk}white);
    }
  }

  @include focus-active() {
    z-index: 1;
    outline: var(--#{$cdk}size-2) solid $outline-color;
    outline-offset: var(--#{$cdk}size-2);
    /* stylelint-disable-next-line */
    box-shadow: none !important;
  }

  @include disabled() {
    outline: 0;
  }
}

@each $color, $value in $theme-colors {
  .btn-#{$color} {
    @if $color != default {
      @include ps-button-variant(
        $value,
        $value,
        theme-color-hover($color),
        theme-color-hover($color),
        theme-color-active($color),
        theme-color-active($color),
        $color
      );
    }
  }
}

@each $color, $value in $theme-colors {
  .btn-outline-#{$color} {
    @include ps-button-outline-variant($value, map-get($map: $cdk-primary, $key: "primary-800"), $color);
  }
}
